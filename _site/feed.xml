<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-11-08T11:25:39-05:00</updated><id>http://localhost:4000/</id><title type="html">Yunran Chen</title><subtitle>A blog about statistics and dreams</subtitle><entry><title type="html">BayesLogit: How to sample from Polyagamma distributiona and some issue on R package</title><link href="http://localhost:4000/how-to-sample-polyagamma/" rel="alternate" type="text/html" title="BayesLogit: How to sample from Polyagamma distributiona and some issue on R package" /><published>2018-11-05T16:18:00-05:00</published><updated>2018-11-05T16:18:00-05:00</updated><id>http://localhost:4000/how-to-sample-polyagamma</id><content type="html" xml:base="http://localhost:4000/how-to-sample-polyagamma/">&lt;p&gt;To sample from PolyaGamma distribution, we could use the &lt;code class=&quot;highlighter-rouge&quot;&gt;rpg&lt;/code&gt; function in R pacakge &lt;code class=&quot;highlighter-rouge&quot;&gt;BayesLogit&lt;/code&gt;, which is hybrid sampling approach based on Devroye, alternative and saddlepoint sampling method proposed by Polson et. al. (&lt;a href=&quot;https://arxiv.org/pdf/1205.0310.pdf&quot;&gt;2013a&lt;/a&gt;, &lt;a href=&quot;https://www2.stat.duke.edu/~jbw44/Papers/NewPGSamplerWriteUp.pdf&quot;&gt;2013b&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Here I provide brief &lt;a href=&quot;https://github.com/YunranChen/yunranchen.github.io/blob/master/assets/pdf/Notes_on_Polyagamma_Sampling.pdf&quot;&gt;notes&lt;/a&gt; on how it works.&lt;/p&gt;</content><author><name>yunranchen</name></author><category term="blog" /><category term="statistics" /><category term="R" /><summary type="html">To sample from PolyaGamma distribution, we could use the rpg function in R pacakge BayesLogit, which is hybrid sampling approach based on Devroye, alternative and saddlepoint sampling method proposed by Polson et. al. (2013a, 2013b).</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/markdown.jpg" /></entry><entry><title type="html">BayesLogit: Instruction for installing R package BayesLogit</title><link href="http://localhost:4000/bayeslogit-r-package-install/" rel="alternate" type="text/html" title="BayesLogit: Instruction for installing R package BayesLogit" /><published>2018-11-05T16:18:00-05:00</published><updated>2018-11-05T16:18:00-05:00</updated><id>http://localhost:4000/bayeslogit-r-package-install</id><content type="html" xml:base="http://localhost:4000/bayeslogit-r-package-install/">&lt;p&gt;To sample from PolyaGamma distribution, we could use the &lt;code class=&quot;highlighter-rouge&quot;&gt;rpg&lt;/code&gt; function in R pacakge &lt;code class=&quot;highlighter-rouge&quot;&gt;BayesLogit&lt;/code&gt;, which applys effecient algorithm and is written in C.&lt;/p&gt;

&lt;p&gt;Since &lt;code class=&quot;highlighter-rouge&quot;&gt;BayesLogit&lt;/code&gt; is removed from CRAN, here follows an instruction to install R package &lt;code class=&quot;highlighter-rouge&quot;&gt;BayesLogit&lt;/code&gt; from github. Notice the &lt;code class=&quot;highlighter-rouge&quot;&gt;rpg&lt;/code&gt; function may not work when the shape parameter is greater than 170, since the normal approximation may not make sure the samples are greater than 0.&lt;/p&gt;

&lt;p&gt;1.Make sure you have installed gcc (Compiler for C).&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;For MacOS, go to App Store, download Xcode.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Or use the commandline in terminal:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-raw&quot; data-lang=&quot;raw&quot;&gt;$ brew install gcc&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;2.Make sure you have right path for &lt;code class=&quot;highlighter-rouge&quot;&gt;gfortran&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-raw&quot; data-lang=&quot;raw&quot;&gt;$ curl -O http://r.research.att.com/libs/gfortran-4.8.2-darwin13.tar.bz2
$ sudo tar fvxz gfortran-4.8.2-darwin13.tar.bz2 -C /&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;3.Follow the instructions in &lt;a href=&quot;https://github.com/jwindle/BayesLogit/blob/master/INSTALL&quot;&gt;github&lt;/a&gt; to generate R package.&lt;/p&gt;

&lt;p&gt;1) Get the BayesLogit code.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;You can clone the repository or download the code as a zip file via
github.com.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;For these instructions, ASSUME the repository directory is called
BayesLogit.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;2) Install the Matrix and RNG files in BayesLogit/Code/C/include/&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;From the command line&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-raw&quot; data-lang=&quot;raw&quot;&gt;      cd to BayesLogit/Code/C/include	
      $ wget https://github.com/jwindle/Matrix/archive/master.zip
      $ wget https://github.com/jwindle/RNG/archive/master.zip
    &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;Or from your browser
    &lt;ul&gt;
      &lt;li&gt;type in the above links and save them in
BayesLogit/Code/C/include/&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Unzip the files.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Remove the -master suffix&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-raw&quot; data-lang=&quot;raw&quot;&gt;    $ mv Matrix-master Matrix
    $ mv RNG-master RNG
    &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;3) cd to BayesLogit/Code/BLPackage&lt;/p&gt;

&lt;p&gt;4) Update the files for the package.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-raw&quot; data-lang=&quot;raw&quot;&gt;    $ bash sync.bash
    &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;5) Build the package&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-raw&quot; data-lang=&quot;raw&quot;&gt;    $ R CMD build BayesLogit
    &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;6) Check the package (optional)&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-raw&quot; data-lang=&quot;raw&quot;&gt;    $ R CMD check BayesLogit_WHATEVER.tar.gz 
    &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;7) Install the package&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-raw&quot; data-lang=&quot;raw&quot;&gt;    $ R CMD INSTALL BayesLogit_WHATEVER.tar.gz
    &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name>yunranchen</name></author><category term="blog" /><category term="statistics" /><category term="R" /><summary type="html">To sample from PolyaGamma distribution, we could use the rpg function in R pacakge BayesLogit, which applys effecient algorithm and is written in C.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/markdown.jpg" /></entry><entry><title type="html">Rshiny: website for Movies recommendation</title><link href="http://localhost:4000/rshiny-movies-website/" rel="alternate" type="text/html" title="Rshiny:  website for Movies recommendation" /><published>2018-07-14T13:52:00-04:00</published><updated>2018-07-14T13:52:00-04:00</updated><id>http://localhost:4000/rshiny-movies-website</id><content type="html" xml:base="http://localhost:4000/rshiny-movies-website/">&lt;p&gt;In this project, we build a shiny app to display insteresting movie infomation based on data from &lt;a href=&quot;https://www.themoviedb.org/&quot;&gt;TMDB&lt;/a&gt;.  It supports movies recommendation and people search.&lt;/p&gt;

&lt;p&gt;You could get the infomation from the latest movies and popular movies. Also you could ask for movie recommendations based on the genre you prefer. In addition, you could search for your favorite actors or directors to get their movies and personal information.&lt;/p&gt;</content><author><name>yunranchen</name></author><category term="project" /><category term="statistics" /><category term="R" /><summary type="html">In this project, we build a shiny app to display insteresting movie infomation based on data from TMDB. It supports movies recommendation and people search.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/markdown.jpg" /></entry><entry><title type="html">DataFest: Exceeding Indeed’’s Needs</title><link href="http://localhost:4000/datafest-exceeding-indeeds-needs/" rel="alternate" type="text/html" title="DataFest: Exceeding Indeed''s Needs" /><published>2018-07-14T13:52:00-04:00</published><updated>2018-07-14T13:52:00-04:00</updated><id>http://localhost:4000/datafest-exceeding-indeeds-needs</id><content type="html" xml:base="http://localhost:4000/datafest-exceeding-indeeds-needs/">&lt;p&gt;In this project, we focus on how Indeed can better serve its existing customers and possibly expand the boundary of data applications in the real market.&lt;/p&gt;

&lt;p&gt;In the first part, we give some suggestions to job seekers using the mismatch between demand and supply in different cities. (Dynamic Visualization). In the second part, we aim to provide some advice for Indeed to improve the number of clicks of posted jobs for different companies. (Bayesian Hierarchical Model) Finally, we try to find out how critical data given by Indeed can be incorporated into existing models to predict macro-level indices. (Fama-French Three Factor Model)&lt;/p&gt;

&lt;p&gt;The report and code please refer to my github &lt;a href=&quot;https://github.com/YunranChen/DataFest2018&quot;&gt;DataFest2018: Exceeding Indeed’s Needs&lt;/a&gt;&lt;/p&gt;</content><author><name>yunranchen</name></author><category term="project" /><category term="statistics" /><category term="R" /><category term="Matlab" /><category term="html" /><category term="css" /><summary type="html">In this project, we focus on how Indeed can better serve its existing customers and possibly expand the boundary of data applications in the real market.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/markdown.jpg" /></entry><entry><title type="html">Python Package: Variational Inference on Latent Dirichlet Allocation</title><link href="http://localhost:4000/python-package-variational-inference-on-latent-dirichlet-allocation/" rel="alternate" type="text/html" title="Python Package: Variational Inference on Latent Dirichlet Allocation" /><published>2018-07-09T17:45:00-04:00</published><updated>2018-07-09T17:45:00-04:00</updated><id>http://localhost:4000/python-package-variational-inference-on-latent-dirichlet-allocation</id><content type="html" xml:base="http://localhost:4000/python-package-variational-inference-on-latent-dirichlet-allocation/">&lt;p&gt;One of the core problems of modern statistics is to approximate hard-to-compute probability densities. This problem is especially important in Bayesian statistics for posterior density approximate under complex hierarchical structure setting (the one that includes latent variables). Variational Inference (VI) is a method that approximates probability densities through optimization. VI is faster and easier to scale to large data compared to classical methods, such as MCMC sampling. Here we implemented variantional EM algorithm on Latent Dirichlet allocation (LDA). Latent Dirichlet allocation (LDA) is a three-level hierarchical Bayesian model for collections of discrete data, such as text corpora. We present Variational EM on LDA model based on Blei \etal,2003 . We present detailed introduction and proof, detailed psudocode, and a package (VIonLDA). We also present the algorithm optimization based on vectorizaiton version which can be extended to not only one-hot-coding matrix. Then we provide an application on a real dataset and get reasonable result. In addition, we present detailed VI algorithm for smoothing LDA. At last, we provide a detailed discussion on ideal data structure.&lt;/p&gt;

&lt;p&gt;Reports and codes please refer to my github &lt;a href=&quot;https://github.com/YunranChen/VIonLDA&quot;&gt;Python Package: Variational Inference on Latent Dirichlet Allocation&lt;/a&gt;&lt;/p&gt;</content><author><name>yunranchen</name></author><category term="project" /><category term="statistics" /><category term="Python" /><summary type="html">One of the core problems of modern statistics is to approximate hard-to-compute probability densities. This problem is especially important in Bayesian statistics for posterior density approximate under complex hierarchical structure setting (the one that includes latent variables). Variational Inference (VI) is a method that approximates probability densities through optimization. VI is faster and easier to scale to large data compared to classical methods, such as MCMC sampling. Here we implemented variantional EM algorithm on Latent Dirichlet allocation (LDA). Latent Dirichlet allocation (LDA) is a three-level hierarchical Bayesian model for collections of discrete data, such as text corpora. We present Variational EM on LDA model based on Blei \etal,2003 . We present detailed introduction and proof, detailed psudocode, and a package (VIonLDA). We also present the algorithm optimization based on vectorizaiton version which can be extended to not only one-hot-coding matrix. Then we provide an application on a real dataset and get reasonable result. In addition, we present detailed VI algorithm for smoothing LDA. At last, we provide a detailed discussion on ideal data structure.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/markdown.jpg" /></entry><entry><title type="html">Dynamic Network Analysis: HiggsBoson</title><link href="http://localhost:4000/dynamic-network-analysis-higgsboson/" rel="alternate" type="text/html" title="Dynamic Network Analysis: HiggsBoson" /><published>2018-07-09T17:45:00-04:00</published><updated>2018-07-09T17:45:00-04:00</updated><id>http://localhost:4000/dynamic-network-analysis-higgsboson</id><content type="html" xml:base="http://localhost:4000/dynamic-network-analysis-higgsboson/">&lt;h2 id=&quot;summary&quot;&gt;Summary:&lt;/h2&gt;

&lt;p&gt;We aim to characterize how information spreads on social platforms like Twitter. Our analysis is based on dynamic retweet network related to Higgs boson discovery. In the first part we presented a thorough exploratory data analysis on the information spreading processes before, during and after the announcement of the discovery of Higgs boson. Specifically, how network statistics and structure vary with time. In the second part, we use epidemiological models (SI model, SIS model and SEIZ model) to capture information diffusion in this event. And we make predictions on the characteristics of the information spreading process such as transition rate and so on. The compartmental models in epidemiology performs well at fitting the data under different situations.&lt;/p&gt;

&lt;p&gt;Reports and codes please refer to my github &lt;a href=&quot;https://github.com/YunranChen/HiggsBoson&quot;&gt;Dynamic Network: HiggsBoson&lt;/a&gt;.&lt;/p&gt;</content><author><name>yunranchen</name></author><category term="project" /><category term="network" /><category term="statistics" /><category term="R" /><summary type="html">Summary:</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/markdown.jpg" /></entry></feed>